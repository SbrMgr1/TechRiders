<<<<<<< HEAD
=======
<<<<<<< HEAD:instore-pickup-service/src/main/java/com/techriders/instorepickupservice/configs/AuthSuccessHandler.java
package com.techriders.instorepickupservice.configs;


import com.techriders.instorepickupservice.domains.User;
import com.techriders.instorepickupservice.services.UserService;
=======
>>>>>>> 7f4ddc30fd21021c4ca373e95d6965e5a79f8eed
package com.techriders.logisticservice.configs;


import com.techriders.logisticservice.domains.User;
import com.techriders.logisticservice.services.UserService;
<<<<<<< HEAD
=======
>>>>>>> 7f4ddc30fd21021c4ca373e95d6965e5a79f8eed:logistic-service/src/main/java/com/techriders/logisticservice/configs/AuthSuccessHandler.java
>>>>>>> 7f4ddc30fd21021c4ca373e95d6965e5a79f8eed
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.authority.AuthorityUtils;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.web.authentication.AuthenticationSuccessHandler;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import java.io.IOException;
import java.util.Set;

@Configuration
public class AuthSuccessHandler implements AuthenticationSuccessHandler {

    @Autowired
    HttpSession session;

    @Autowired
    UserService userService;


    @Override
    public void onAuthenticationSuccess(HttpServletRequest httpServletRequest, HttpServletResponse httpServletResponse, Authentication authentication) throws IOException, ServletException {
        Set<String> roles = AuthorityUtils.authorityListToSet(authentication.getAuthorities());

        UserDetails userDetails = (UserDetails) authentication.getPrincipal();
        User user = userService.findByUserName(userDetails.getUsername());

        httpServletRequest.getSession().setAttribute("user_points",user.getPoints());

        if (roles.contains("ROLE_ADMIN")) {
            httpServletResponse.sendRedirect("/administration");
        } else {
            httpServletResponse.sendRedirect("/");
        }
    }
}